00100000001010000000000000000001 ; //addi $8, $1, 0b1
00100000001010010000000000000010 ;//   addi $9, $1, 0b10
00000000000010000001000010000000 ;//   SLL $2, $8, 2 rd ← rt << sa
00000001000000100001100001000010 ;//   SRL $3, $2, 1 
00000000000000100010000001000011 ;//   SRA $4, $2, 1
00000001001010000110100000000100 ;//   SLLV $13, $8, $9 // 13 ← 1 << 2 RESULT 4
00000001000010010111000000000110 ;//  SRLV $14, $9, $8  rd ← 2 >> 1  RESULT 1
00000001000010010111100000000111 ;//   SRAV $15, $9, $8  rd ← rt >> rs 
00000000000000000000000000111111   halt

r2 =4, r3=2 , r4=2, r8= 1 r9= 2 r13=4 r14=1 r15=1 probar en fpga